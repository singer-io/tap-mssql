#!/usr/bin/env python3
import os
import sys
import argparse
import subprocess
from argparse import RawTextHelpFormatter

def start_container(name):
    START_COMMAND = """
    sudo docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD={0}" \
        -p {1}:{1} --name {2} \
        -d mcr.microsoft.com/mssql/server:2017-latest
    """.format(os.getenv('STITCH_TAP_MSSQL_TEST_DATABASE_PASSWORD'),
               os.getenv('STITCH_TAP_MSSQL_TEST_DATABASE_PORT', 1433),
               name)

    print("Starting Docker process sql1 using container: mcr.microsoft.com/mssql/server:2017-latest")
    proc = subprocess.run(START_COMMAND, shell=True)
    if proc.returncode != 0:
        sys.exit("Exited with code: {}, the docker process failed to start.".format(proc.returncode))
    print("Process started successfully, connect on localhost port {}".format(os.getenv('STITCH_TAP_MSSQL_TEST_DATABASE_PORT', 1433)))

def stop_container(name):
    STOP_COMMAND = "sudo docker stop {0} && sudo docker rm {0}"

    print("Stopping Docker process sql1")
    proc = subprocess.run(STOP_COMMAND.format(name), shell=True)
    if proc.returncode != 0:
        sys.exit("Exited with code: {}, the docker process failed to stop.".format(proc.returncode))
    print("Process stopped successfully")

def connect_to_db():
    CONNECT_COMMAND = "mssql-cli -P '{}' -S 127.0.0.1,{} -U SA".format(os.getenv('STITCH_TAP_MSSQL_TEST_DATABASE_PASSWORD'),
                                                                       os.getenv('STITCH_TAP_MSSQL_TEST_DATABASE_PORT', 1433))

    print("Attempting to connect to running container using mssql-cli")
    # NB: Using call instead of run here because it is blocking
    #     This returns only an exit code.
    returncode = subprocess.call(CONNECT_COMMAND,
                           shell=True)
    if returncode != 0:
        sys.exit("Exited with code: {}, could not connect.".format(returncode))

DESCRIPTION = """
Manage docker instance for tap-mssql testing.

Uses environment variables:
    STITCH_TAP_MSSQL_TEST_DATABASE_PASSWORD (required)
    STITCH_TAP_MSSQL_TEST_DATABASE_PORT (default 1433)
"""
parser = argparse.ArgumentParser(description=DESCRIPTION, formatter_class=RawTextHelpFormatter)
parser.add_argument('action', choices=['start','stop', 'connect'], help='action to perform with the container')
parser.add_argument('--name', help="name assigned to running docker process", default='sql1')

def main():
    parsed_args = parser.parse_args()
    # Potential arguments to add: pull, changing docker cointainer, changing password
    if parsed_args.action == 'start':
        start_container(parsed_args.name)
    elif parsed_args.action == 'stop':
        stop_container(parsed_args.name)
    elif parsed_args.action == 'connect':
        connect_to_db()

if __name__ == "__main__":
    main()
